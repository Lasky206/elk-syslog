input {
	udp{
		port => 5140
		type => "syslog"
	}
	tcp{
		port => 5140
		type => "syslog"
	}
}

filter {
  if [type] == "syslog" {
    grok {
			patterns_dir => "/logstash/config/grok_patterns.txt"
      match => [
				# IOS
				"message", "((${NUMBER:log_sequence#})?:( %{NUMBER}:)? )?%{CISCOTIMESTAMPTZ:log_date}: %%{CISCO_REASON:facility}-%{INT:severity_level}-%{CISCO_REASON:facility_mnemonic}: %{GREEDYDATA:syslog_message}",

				# Nexus
				"message","((${NUMBER:log_sequence#})?:( %{NUMBER}:)? )?%{NEXUSTIMESTAMP:log_date}: %%{CISCO_REASON:facility}-%{INT:severity_level}-%{CISCO_REASON:facility_mnemonic}: %{GREEDYDATA:syslog_message}",

				# Meraki
				"message","%{DATA} %{DATA} %{WORD:device_name} .*%{IPV4:source_address}.*%{IPV4:destination_address} protocol=%{WORD:protocol}.*%{NUMBER:source_port}.*%{NUMBER:destination_port} %{GREEDYDATA:syslog_message}",

				# Misc. Syslogs
				"message", "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}"
			]
			add_tag => [ "cisco" ]
    }
    # date {
    #   match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    # }
  }
	if "cisco" in [tags] {
		date {
			match => [
			"log_date",

			# IOS
			"MMM dd HH:mm:ss.SSS ZZZ",
			"MMM dd HH:mm:ss ZZZ",
			"MMM dd HH:mm:ss.SSS",

			# Nexus
			"YYYY MMM dd HH:mm:ss.SSS ZZZ",
			"YYYY MMM dd HH:mm:ss ZZZ",
			"YYYY MMM dd HH:mm:ss.SSS",

			# Hail marry
			"ISO8601"
			]
		}

		# Add the log level's name instead of just a number.
		mutate {
			gsub => [
			"severity_level", "0", "0 - Emergency",
			"severity_level", "1", "1 - Alert",
			"severity_level", "2", "2 - Critical",
			"severity_level", "3", "3 - Error",
			"severity_level", "4", "4 - Warning",
			"severity_level", "5", "5 - Notification",
			"severity_level", "6", "6 - Informational"
			]
		}
	}
}


output {
	elasticsearch {
		hosts => "elasticsearch:9200"
	}
	stdout {
		codec => rubydebug
	}
}
